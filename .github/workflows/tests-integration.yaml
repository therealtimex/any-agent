name: Integration Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  run-integration-tinyagent:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          activate-environment: true

      - run: uv sync --group tests

      - env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python scripts/wake_up_hf_endpoint.py --retry=10

      - name: Run TINYAGENT test
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          HF_ENDPOINT: ${{ secrets.HF_ENDPOINT }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        run: pytest tests/integration/frameworks -v -k "TINYAGENT" --cov --cov-report=xml --cov-append

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run-integration-all:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          activate-environment: true

      - run: uv sync --group tests --extra all --extra composio

      - env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: pytest tests/integration/frameworks -n auto -v -k "not TINYAGENT" --cov --cov-report=xml --cov-append

      - name: Run Tool tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          COMPOSIO_API_KEY: ${{ secrets.COMPOSIO_API_KEY }}
          COMPOSIO_USER_ID: ${{ secrets.COMPOSIO_USER_ID }}
        run: pytest -v tests/integration/tools --cov --cov-report=xml --cov-append

      - name: Run Snapshot tests
        run: pytest -v tests/snapshots --cov --cov-report=xml --cov-append

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run-integration-a2a:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          activate-environment: true

      - run: uv sync --group tests --extra all --extra a2a

      - env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: pytest tests/integration/a2a -n auto -v --cov --cov-report=xml --cov-append

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run-integration-mcp:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          activate-environment: true

      - run: uv sync --group tests --extra all

      - env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: pytest tests/integration/mcp -n auto -v --cov --cov-report=xml --cov-append

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
